name: Deploy to Test

on:
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21.6.1'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build the application
        run: npm run build

      - name: Archive static files from dist
        run: |
          [ -d "dist/assets" ] || { echo "assets directory not found"; exit 1; }
          [ -d "dist/img" ] || { echo "img directory not found"; exit 1; }
          [ -f "dist/index.html" ] || { echo "index.html not found"; exit 1; }
          [ -d "public" ] || { echo "public directory not found"; exit 1; }
          tar -czf static-files.tar.gz -C dist assets img index.html -C .. public .env

      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Deploy static files to TEST server
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" scp -o StrictHostKeyChecking=no static-files.tar.gz ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/root/production/hireskilldev.com/frontend/

      - name: Extract and Deploy on TEST server
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd /root/production/hireskilldev.com/backend/
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')
          mkdir -p backup_resources/$TIMESTAMP
          [ -d "assets" ] && mv assets backup_resources/$TIMESTAMP/
          [ -d "img" ] && mv img backup_resources/$TIMESTAMP/
          [ -f "index.html" ] && mv index.html backup_resources/$TIMESTAMP/
          [ -d "public" ] && mv public backup_resources/$TIMESTAMP/
          [ -d ".env" ] && mv .env backup_resources/$TIMESTAMP/
          tar -xzf static-files.tar.gz
          rm static-files.tar.gz
          [ -d "public" ] && mv public ../
          [ -d ".env" ] && mv .env ../
          systemctl restart nginx
          EOF
